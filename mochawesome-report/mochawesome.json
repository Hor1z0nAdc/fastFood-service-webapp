{
  "stats": {
    "suites": 23,
    "tests": 48,
    "passes": 48,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-05T13:13:10.227Z",
    "end": "2022-03-05T13:13:10.646Z",
    "duration": 419,
    "testsRegistered": 48,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4e48f94c-0118-4173-a4b6-539234057205",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00d894d9-1be4-428e-adf3-2454d0f25eb9",
          "title": "felhasználó útvonalak tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\account.js",
          "file": "\\test\\account.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET /regisztracio",
              "fullTitle": "felhasználó útvonalak tesztelése GET /regisztracio",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/regisztracio\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \ndone()",
              "err": {},
              "uuid": "dab25568-7c0a-4c25-ba26-05395e4fa533",
              "parentUUID": "00d894d9-1be4-428e-adf3-2454d0f25eb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /bejelentkezes",
              "fullTitle": "felhasználó útvonalak tesztelése GET /bejelentkezes",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bejelentkezes\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \ndone()",
              "err": {},
              "uuid": "39dde00c-fdb5-41f3-96a0-fec169faf0cd",
              "parentUUID": "00d894d9-1be4-428e-adf3-2454d0f25eb9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dab25568-7c0a-4c25-ba26-05395e4fa533",
            "39dde00c-fdb5-41f3-96a0-fec169faf0cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ac342ee8-2f99-441e-8ee9-cb587c95253f",
          "title": "felhasználó függvények tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\account.js",
          "file": "\\test\\account.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "879b7240-5b09-4807-8515-29295fb6200b",
              "title": "regisztrációs adatok validátciója - registerValidation()",
              "fullFile": "D:\\programkódok\\Fast food\\test\\account.js",
              "file": "\\test\\account.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"regisztrációs adatok validátciója - registerValidation()\"",
                  "fullTitle": "felhasználó függvények tesztelése regisztrációs adatok validátciója - registerValidation() \"before each\" hook in \"regisztrációs adatok validátciója - registerValidation()\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "req = { errors: {}, flash: function (type, text) { this.errors[type] = text }}",
                  "err": {},
                  "uuid": "a804a237-9b6a-45b2-ac0d-18a259b9d3dc",
                  "parentUUID": "879b7240-5b09-4807-8515-29295fb6200b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "helyes paraméterek megadva - nem kellene lennie hibának",
                  "fullTitle": "felhasználó függvények tesztelése regisztrációs adatok validátciója - registerValidation() helyes paraméterek megadva - nem kellene lennie hibának",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let isError = accountF.registerValidation(validParams.name, validParams.email, validParams.password1, validParams.password2, req)\nexpect(isError).to.be.false",
                  "err": {},
                  "uuid": "76e94b95-1ad4-4508-94a6-6d4170abe1b0",
                  "parentUUID": "879b7240-5b09-4807-8515-29295fb6200b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "helytelen név megadva -  név hibát kell jeleznie",
                  "fullTitle": "felhasználó függvények tesztelése regisztrációs adatok validátciója - registerValidation() helytelen név megadva -  név hibát kell jeleznie",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let isError = accountF.registerValidation(invalidName.name, invalidName.email, invalidName.password1, invalidName.password2, req)\nexpect(isError).to.be.true\nexpect(req.errors.nameError).to.be.equal(\"A felhasználónévnek 3-16 karakter hosszúnak kell lennie.\")",
                  "err": {},
                  "uuid": "6b0fc882-a188-4205-b51d-36f9903823ba",
                  "parentUUID": "879b7240-5b09-4807-8515-29295fb6200b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "helytelen email megadva - email hibát kell jeleznie",
                  "fullTitle": "felhasználó függvények tesztelése regisztrációs adatok validátciója - registerValidation() helytelen email megadva - email hibát kell jeleznie",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let isError = accountF.registerValidation(invalidEmail.name, invalidEmail.email, invalidEmail.password1, invalidEmail.password2, req)\nexpect(isError).to.be.true\nexpect(req.errors.emailError).to.be.equal(\"Meg kell adnia az email címét!\")",
                  "err": {},
                  "uuid": "6374f2fb-bb02-4e8a-a1d5-7f1376854627",
                  "parentUUID": "879b7240-5b09-4807-8515-29295fb6200b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "helytelen jelszó megadva - jelszó hibát kell jeleznie",
                  "fullTitle": "felhasználó függvények tesztelése regisztrációs adatok validátciója - registerValidation() helytelen jelszó megadva - jelszó hibát kell jeleznie",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let isError = accountF.registerValidation(invalidPassword1.name, invalidPassword1.email, invalidPassword1.password1, invalidPassword1.password2, req)\nexpect(isError).to.be.true\nexpect(req.errors.passwordError).to.be.equal(\"A jelszónak 5-16 karakter hosszúnak kell lennie.\")",
                  "err": {},
                  "uuid": "56a4d12f-d03f-4361-aa8b-1ddd4aa4ec8e",
                  "parentUUID": "879b7240-5b09-4807-8515-29295fb6200b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "nem megegyező jelszó - jelszó hibát kell jeleznie",
                  "fullTitle": "felhasználó függvények tesztelése regisztrációs adatok validátciója - registerValidation() nem megegyező jelszó - jelszó hibát kell jeleznie",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let isError = accountF.registerValidation(invalidPassword2.name, invalidPassword2.email, invalidPassword2.password1, invalidPassword2.password2, req)\nexpect(isError).to.be.true\nexpect(req.errors.password2Error).to.be.equal(\"A két jelszó nem egyezik!\")",
                  "err": {},
                  "uuid": "e89f50c9-0e23-4b8f-8a4c-ffa00c444204",
                  "parentUUID": "879b7240-5b09-4807-8515-29295fb6200b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "76e94b95-1ad4-4508-94a6-6d4170abe1b0",
                "6b0fc882-a188-4205-b51d-36f9903823ba",
                "6374f2fb-bb02-4e8a-a1d5-7f1376854627",
                "56a4d12f-d03f-4361-aa8b-1ddd4aa4ec8e",
                "e89f50c9-0e23-4b8f-8a4c-ffa00c444204"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2a552688-5264-407c-80e0-e77ce1893003",
              "title": "foglalt email ellenőrzés - takenEmail()",
              "fullFile": "D:\\programkódok\\Fast food\\test\\account.js",
              "file": "\\test\\account.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"foglalt email ellenőrzés - takenEmail()\"",
                  "fullTitle": "felhasználó függvények tesztelése foglalt email ellenőrzés - takenEmail() \"before all\" hook in \"foglalt email ellenőrzés - takenEmail()\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "req = { errors: {}, flash: function (type, text) { this.errors[type] = text }}\nname = \"dummyName\"\n        //     mongoose.disconnect()\n        //     const Mockgoose = require(\"mockgoose\").Mockgoose\n        //     const mockgoose = new Mockgoose(mongoose)\n\n        //     mockgoose.prepareStorage()\n        //         .then(() => {\n        //             mongoose.connect('mongodb://localhost/test',\n        //                 { useNewUrlParser: true, useCreateIndex: true })\n        //                 .then((res, err) => {\n        //                 if (err) return reject(err);\n        //                 resolve();\n        //                 })\n        //     })\n        //     done()",
                  "err": {},
                  "uuid": "307cd0c2-9da8-4d0e-923f-a3a1f5a907fc",
                  "parentUUID": "2a552688-5264-407c-80e0-e77ce1893003",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "foglalt jelszó esetén megfelelő hibaüzenet és név rögzítése",
                  "fullTitle": "felhasználó függvények tesztelése foglalt email ellenőrzés - takenEmail() foglalt jelszó esetén megfelelő hibaüzenet és név rögzítése",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "accountF.takenEmail(name, req)\nexpect(req.errors.emailError).to.be.eq(\"A megadott email már foglalt!\")",
                  "err": {},
                  "uuid": "637e01d8-51cf-4437-a41d-03d88ad5e973",
                  "parentUUID": "2a552688-5264-407c-80e0-e77ce1893003",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "637e01d8-51cf-4437-a41d-03d88ad5e973"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "12cc203e-a181-4f23-8faf-200ca2d990c7",
          "title": "Admin - deliveryController",
          "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
          "file": "\\test\\admin.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Admin - deliveryController\"",
              "fullTitle": "Admin - deliveryController \"before all\" hook in \"Admin - deliveryController\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "futárok = [{ createdAt: \"2022-01-06T20:07:23.806+00:00\" }, { createdAt: \"2022-02-06T20:07:23.806+00:00\" }]\nname = \"dummyFutár\"\nemail = \"dummyEmail\"\npassword1 = \"dummyPassword1\"",
              "err": {},
              "uuid": "0d9dd620-797c-4105-a685-690b8612be58",
              "parentUUID": "12cc203e-a181-4f23-8faf-200ca2d990c7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Futár létrehozásának formázása (év-hónap-nap) alakra - formatCreateAt()",
              "fullTitle": "Admin - deliveryController Futár létrehozásának formázása (év-hónap-nap) alakra - formatCreateAt()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "delivery.formatCreateAt(futárok)\nexpect(futárok[0].createdAt).to.be.equal(\"2022-01-06\")\nexpect(futárok[1].createdAt).to.be.equal(\"2022-02-06\")",
              "err": {},
              "uuid": "5d67b5ed-4a7d-42ab-99a3-78ad23acf988",
              "parentUUID": "12cc203e-a181-4f23-8faf-200ca2d990c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "futár létrehozása, vissza kell adnia futár objektumot - createDeliveryMan()",
              "fullTitle": "Admin - deliveryController futár létrehozása, vissza kell adnia futár objektumot - createDeliveryMan()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "delivery.createDeliveryMan(name, email, password1).then((futár) => {\n    expect(futár).to.be.a(\"object\")\n    expect(futár.név).to.be.eql(\"dummyFutár\")\n    expect(futár.email).to.be.eql(\"dummyEmail\")\n    expect(futár.beosztás).to.be.eql(\"futár\")\n    expect(futár.jelszó).to.be.a(\"string\")\n})",
              "err": {},
              "uuid": "f756c432-946e-41a1-b50b-c51f28bddf6d",
              "parentUUID": "12cc203e-a181-4f23-8faf-200ca2d990c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "99ddb72f-e5d1-4536-9322-66bdeec4ae40",
              "title": "deliveryController útvonalak",
              "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
              "file": "\\test\\admin.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "GET /futarok",
                  "fullTitle": "Admin - deliveryController deliveryController útvonalak GET /futarok",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server) \n    .get(\"/futarok\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \n    done()",
                  "err": {},
                  "uuid": "3e88ebfc-dea8-4cd7-a34c-ca6ae1ff7bf1",
                  "parentUUID": "99ddb72f-e5d1-4536-9322-66bdeec4ae40",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "GET /futarok/register",
                  "fullTitle": "Admin - deliveryController deliveryController útvonalak GET /futarok/register",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/futarok/register\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \n    done()",
                  "err": {},
                  "uuid": "d1b37ee4-6f6e-49a6-8e19-32978f223204",
                  "parentUUID": "99ddb72f-e5d1-4536-9322-66bdeec4ae40",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "GET /futarok/kiosztas",
                  "fullTitle": "Admin - deliveryController deliveryController útvonalak GET /futarok/kiosztas",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/futarok/kiosztas\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \n    done()",
                  "err": {},
                  "uuid": "f9bfec70-2de6-4032-a4ce-a13a677b615f",
                  "parentUUID": "99ddb72f-e5d1-4536-9322-66bdeec4ae40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e88ebfc-dea8-4cd7-a34c-ca6ae1ff7bf1",
                "d1b37ee4-6f6e-49a6-8e19-32978f223204",
                "f9bfec70-2de6-4032-a4ce-a13a677b615f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ae35615b-2a4c-4014-bac7-6c30ebe8a624",
              "title": "Rendelés hozzáadása a futárokhoz - assignToDelMan()",
              "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
              "file": "\\test\\admin.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Rendelés hozzáadása a futárokhoz - assignToDelMan()\"",
                  "fullTitle": "Admin - deliveryController Rendelés hozzáadása a futárokhoz - assignToDelMan() \"before all\" hook in \"Rendelés hozzáadása a futárokhoz - assignToDelMan()\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "futárIds = [\"1\", \"2\"]\nfutárNames = [\"Béla\", \"Géza\"]\nrendelések = [{futárId: \"1\"}, {futárId: \"1\"}, {futárId: \"2\"} ]\nüresRendelések = [],\nüresFutárIds = []",
                  "err": {},
                  "uuid": "713772e0-ad84-4674-a97c-013c6ad1cf93",
                  "parentUUID": "ae35615b-2a4c-4014-bac7-6c30ebe8a624",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Vissza kell adnia a tömböt, ahol futárokhoz rendelés lett kiosztva",
                  "fullTitle": "Admin - deliveryController Rendelés hozzáadása a futárokhoz - assignToDelMan() Vissza kell adnia a tömböt, ahol futárokhoz rendelés lett kiosztva",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let futárHozzárendelés = delivery.assignToDelMan(futárIds, rendelések, futárNames)\nexpect(futárHozzárendelés).to.be.a(\"array\")\nexpect(futárHozzárendelés).to.have.lengthOf(2)\nexpect(futárHozzárendelés[0]).to.have.lengthOf(2)\nexpect(futárHozzárendelés[1]).to.have.lengthOf(1)",
                  "err": {},
                  "uuid": "e7f251a6-fbe4-4c46-9416-993036fdb73d",
                  "parentUUID": "ae35615b-2a4c-4014-bac7-6c30ebe8a624",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Rendelés hiányában üres tömböt kell visszaadnia",
                  "fullTitle": "Admin - deliveryController Rendelés hozzáadása a futárokhoz - assignToDelMan() Rendelés hiányában üres tömböt kell visszaadnia",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let futárHozzárendelés = delivery.assignToDelMan(futárIds, üresRendelések, futárNames)\nexpect(futárHozzárendelés).to.be.a(\"array\")\nexpect(futárHozzárendelés).to.have.lengthOf(0)",
                  "err": {},
                  "uuid": "947e692f-7254-4498-ba44-8e680b2a4293",
                  "parentUUID": "ae35615b-2a4c-4014-bac7-6c30ebe8a624",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Futár hiányában üres tömböt kell visszaadnia",
                  "fullTitle": "Admin - deliveryController Rendelés hozzáadása a futárokhoz - assignToDelMan() Futár hiányában üres tömböt kell visszaadnia",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let futárHozzárendelés = delivery.assignToDelMan(üresFutárIds, rendelések, futárNames)\nexpect(futárHozzárendelés).to.be.a(\"array\")\nexpect(futárHozzárendelés).to.have.lengthOf(0)",
                  "err": {},
                  "uuid": "2f795d91-bcf4-463c-9b6d-36122a3ba411",
                  "parentUUID": "ae35615b-2a4c-4014-bac7-6c30ebe8a624",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e7f251a6-fbe4-4c46-9416-993036fdb73d",
                "947e692f-7254-4498-ba44-8e680b2a4293",
                "2f795d91-bcf4-463c-9b6d-36122a3ba411"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1ff040d4-91b8-4e76-bd81-fb085d93e838",
              "title": "futár regisztráció",
              "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
              "file": "\\test\\admin.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "helytelen adatok, redirectelnie kell",
                  "fullTitle": "Admin - deliveryController futár regisztráció helytelen adatok, redirectelnie kell",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server) \n    .get(\"/futarok\")\n    .send({name: name, email: email, password1: incorrectPw1, password2: pw2})\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \n    done()",
                  "err": {},
                  "uuid": "77435a16-c258-4ca9-a85f-cb17a906b0bf",
                  "parentUUID": "1ff040d4-91b8-4e76-bd81-fb085d93e838",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77435a16-c258-4ca9-a85f-cb17a906b0bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "5d67b5ed-4a7d-42ab-99a3-78ad23acf988",
            "f756c432-946e-41a1-b50b-c51f28bddf6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c6eb43b3-f06e-479d-96d9-d35a9bebe624",
          "title": "Admin - itemActionController",
          "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
          "file": "\\test\\admin.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "a req-be be kell jegyeznie a hibát - hibakezelés()",
              "fullTitle": "Admin - itemActionController a req-be be kell jegyeznie a hibát - hibakezelés()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "req = { errors: {}, flash: function (type, text) { this.errors[type] = text }}\nitem.hibakezelés(név, leírás, error, req)\nexpect(req.errors.árError).to.be.eql(error)\nexpect(req.errors.név).to.be.eql(név)\nexpect(req.errors.leírás).to.be.eql(leírás)",
              "err": {},
              "uuid": "22a6cbe5-437b-4df9-919f-9dd130b912e6",
              "parentUUID": "c6eb43b3-f06e-479d-96d9-d35a9bebe624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helyes formában kell megadnia a kép nevét () - createImageName()",
              "fullTitle": "Admin - itemActionController helyes formában kell megadnia a kép nevét () - createImageName()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let kép1 = \"képecske.jpg\"\nlet currentDate = item.createImageName(\"2022/02/28\", kép1)\nexpect(currentDate).to.be.eql(\"képecske20220228.jpg\")",
              "err": {},
              "uuid": "5b76a183-296e-45b9-822e-8be0509886c1",
              "parentUUID": "c6eb43b3-f06e-479d-96d9-d35a9bebe624",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "5af27768-8928-4508-af19-f4ca41835ff8",
              "title": "megadot adatok ellenőrzése - incorrectData()",
              "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
              "file": "\\test\\admin.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "helyes adatok megadva, false-t kell visszaadnia",
                  "fullTitle": "Admin - itemActionController megadot adatok ellenőrzése - incorrectData() helyes adatok megadva, false-t kell visszaadnia",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let result = item.incorrectData(correctár, név, leírás, req)\nexpect(result).to.be.false",
                  "err": {},
                  "uuid": "8c83d265-dcf7-419d-affe-944ea8478b60",
                  "parentUUID": "5af27768-8928-4508-af19-f4ca41835ff8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "helytelen (nem szám) ár megadva, true-t kell visszaadnia",
                  "fullTitle": "Admin - itemActionController megadot adatok ellenőrzése - incorrectData() helytelen (nem szám) ár megadva, true-t kell visszaadnia",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let result = item.incorrectData(NanÁr, név, leírás, req)\n\nexpect(result).to.be.true",
                  "err": {},
                  "uuid": "8b23cb52-7405-40d7-81fe-e63cdd950fbf",
                  "parentUUID": "5af27768-8928-4508-af19-f4ca41835ff8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "helytelen (negatív) ár megadva, true-t kell visszaadnia",
                  "fullTitle": "Admin - itemActionController megadot adatok ellenőrzése - incorrectData() helytelen (negatív) ár megadva, true-t kell visszaadnia",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let result = item.incorrectData(negativeÁr, név, leírás, req)\n\nexpect(result).to.be.true",
                  "err": {},
                  "uuid": "730523e8-5313-4570-add1-df56670b01d7",
                  "parentUUID": "5af27768-8928-4508-af19-f4ca41835ff8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c83d265-dcf7-419d-affe-944ea8478b60",
                "8b23cb52-7405-40d7-81fe-e63cdd950fbf",
                "730523e8-5313-4570-add1-df56670b01d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7bc14d40-8a02-43b9-8f8a-036221c12936",
              "title": "redirect útvonal meghatározása - redirectPath()",
              "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
              "file": "\\test\\admin.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"redirect útvonal meghatározása - redirectPath()\"",
                  "fullTitle": "Admin - itemActionController redirect útvonal meghatározása - redirectPath() \"before all\" hook in \"redirect útvonal meghatározása - redirectPath()\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "üditőDoc = { kategória: \"üdítő\"}\ndoc = { kategória: \"dummy\"}",
                  "err": {},
                  "uuid": "c54ab0ac-e52e-42a4-a2bb-4f9b2b08be60",
                  "parentUUID": "7bc14d40-8a02-43b9-8f8a-036221c12936",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "üdítő kategória esetén /udito-t kell visszaadnia",
                  "fullTitle": "Admin - itemActionController redirect útvonal meghatározása - redirectPath() üdítő kategória esetén /udito-t kell visszaadnia",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = item.determinePath(üditőDoc)\nexpect(res).to.be.eql(\"/udito\")",
                  "err": {},
                  "uuid": "ba514820-1d95-41fc-ae65-ad12085e905f",
                  "parentUUID": "7bc14d40-8a02-43b9-8f8a-036221c12936",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "nem üditő kategória esetén /{kategória}-t kell visszaadnia",
                  "fullTitle": "Admin - itemActionController redirect útvonal meghatározása - redirectPath() nem üditő kategória esetén /{kategória}-t kell visszaadnia",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = item.determinePath(doc)\nexpect(res).to.be.eql(\"/dummy\")",
                  "err": {},
                  "uuid": "61045974-4150-492a-99e6-2a6503e5f07f",
                  "parentUUID": "7bc14d40-8a02-43b9-8f8a-036221c12936",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba514820-1d95-41fc-ae65-ad12085e905f",
                "61045974-4150-492a-99e6-2a6503e5f07f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "22a6cbe5-437b-4df9-919f-9dd130b912e6",
            "5b76a183-296e-45b9-822e-8be0509886c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd62965e-c6cb-4706-8783-72b2dc991883",
          "title": "Admin - ordercontroller",
          "fullFile": "D:\\programkódok\\Fast food\\test\\admin.js",
          "file": "\\test\\admin.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "szeparálnia kell a termékeket a rendelésektől rendelők szerint - seperateTermékek()",
              "fullTitle": "Admin - ordercontroller szeparálnia kell a termékeket a rendelésektől rendelők szerint - seperateTermékek()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let res = order.seperateTermékek(rendelések)\nexpect(res).to.be.a(\"array\")\nexpect(res).to.have.lengthOf(2)\nexpect(res[0]).to.have.lengthOf(2)\nexpect(res[1]).to.have.lengthOf(1)",
              "err": {},
              "uuid": "fc871703-7493-4c0e-bdd7-6baa1c405a21",
              "parentUUID": "dd62965e-c6cb-4706-8783-72b2dc991883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Megfelelő alakban (string) kell visszadnia a termékeket - formatTermékek",
              "fullTitle": "Admin - ordercontroller Megfelelő alakban (string) kell visszadnia a termékeket - formatTermékek",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let seperated = order.seperateTermékek(rendelések)\nlet res = order.formatTermékek(seperated)\nexpect(res).to.be.a(\"array\")\nexpect(res).to.have.lengthOf(2)\nexpect(res[0]).to.be.eql(\"Nutellás 1 db\\nLipton peach 2 db\\n\")\nexpect(res[1]).to.be.eql(\"Nutellás 1 db\\n\")",
              "err": {},
              "uuid": "e0984524-d801-49ad-9f1f-c3383da0b2d5",
              "parentUUID": "dd62965e-c6cb-4706-8783-72b2dc991883",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc871703-7493-4c0e-bdd7-6baa1c405a21",
            "e0984524-d801-49ad-9f1f-c3383da0b2d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e629e9f2-83d1-460d-b07b-29542ed1029e",
          "title": "Kosár létrehozása - createCart() függvény tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\cart.js",
          "file": "\\test\\cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "vissza kellene adnia egy üres kosarat a megfelelő kulcsokkal",
              "fullTitle": "Kosár létrehozása - createCart() függvény tesztelése vissza kellene adnia egy üres kosarat a megfelelő kulcsokkal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let cart = cartAction.createCart()\nexpect(cart).to.be.a(\"object\")\nexpect(cart).to.have.keys([\"items\", \"totalPrice\", \"totalQuantity\"])",
              "err": {},
              "uuid": "26963247-4010-49fe-98c1-cc04efdbf030",
              "parentUUID": "e629e9f2-83d1-460d-b07b-29542ed1029e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26963247-4010-49fe-98c1-cc04efdbf030"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a05584a-cede-4ff9-be56-9ed50a87e929",
          "title": "hozzáadás a kosárhoz - addToCart() függvény tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\cart.js",
          "file": "\\test\\cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fbece6e0-462e-437f-9092-4d662486edce",
              "title": "kosárban nem jelen lévő termék hozzáadása",
              "fullFile": "D:\\programkódok\\Fast food\\test\\cart.js",
              "file": "\\test\\cart.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "hozzá kell adni a kosárhoz a termék id-ját ",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése kosárban nem jelen lévő termék hozzáadása hozzá kell adni a kosárhoz a termék id-ját ",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(cart.items).to.have.key(2)",
                  "err": {},
                  "uuid": "ab7fedfd-9929-41e2-9d31-b4064038594a",
                  "parentUUID": "fbece6e0-462e-437f-9092-4d662486edce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "kosárban lévő temékhez hozzá kell adnia a mennyiséget és tulajdonságokat",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése kosárban nem jelen lévő termék hozzáadása kosárban lévő temékhez hozzá kell adnia a mennyiséget és tulajdonságokat",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(cart.items[2].quantity).to.equal(1)\nexpect(cart.items[2].item).to.eql({_id: 2, ár: 5})",
                  "err": {},
                  "uuid": "bfd0d52d-4615-496a-b054-bfdb87009de6",
                  "parentUUID": "fbece6e0-462e-437f-9092-4d662486edce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "meg kell növelnie a kosárban lévő termék mennyiséget és az árat",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése kosárban nem jelen lévő termék hozzáadása meg kell növelnie a kosárban lévő termék mennyiséget és az árat",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(cart.totalQuantity).to.be.equal(3)\nexpect(cart.totalPrice).to.be.equal(14)",
                  "err": {},
                  "uuid": "cb9386b4-dce2-4734-9d95-d944f625f5de",
                  "parentUUID": "fbece6e0-462e-437f-9092-4d662486edce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab7fedfd-9929-41e2-9d31-b4064038594a",
                "bfd0d52d-4615-496a-b054-bfdb87009de6",
                "cb9386b4-dce2-4734-9d95-d944f625f5de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "290e2ca7-59b2-4fa0-869f-c9255548276b",
              "title": "már jelen lévő termék hozzáadása",
              "fullFile": "D:\\programkódok\\Fast food\\test\\cart.js",
              "file": "\\test\\cart.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "növelnie kell a teljes mennyiséget, mennyiséget és az árat",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése már jelen lévő termék hozzáadása növelnie kell a teljes mennyiséget, mennyiséget és az árat",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let  cart = {\n    items: { 2: { _id: 2, ár: 5, quantity: 1}},\n    totalQuantity: 2,\n    totalPrice: 9\n}\nlet req = { body: { _id: 2, ár: 5}}\ncartAction.addToCart(cart, req)\nexpect(cart.totalQuantity).to.be.equal(3)\nexpect(cart.items[req.body._id].quantity).to.be.equal(2)\nexpect(cart.totalPrice).to.be.equal(14)",
                  "err": {},
                  "uuid": "fadc1701-825e-4c94-a8bc-bf289f9266aa",
                  "parentUUID": "290e2ca7-59b2-4fa0-869f-c9255548276b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fadc1701-825e-4c94-a8bc-bf289f9266aa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "183de621-7a89-4409-96f1-9741fe3fb47e",
          "title": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\cart.js",
          "file": "\\test\\cart.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"kosár frissítése - updateCart()-ot megvalósító függvények tesztelése\"",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése \"before each\" hook in \"kosár frissítése - updateCart()-ot megvalósító függvények tesztelése\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cart = {\n    items: { 2: { item: { _id: 2, ár: 5 }, quantity: 1},\n             3: { item: { _id: 3, ár: 4 }, quantity: 1}},\n    totalQuantity: 2,\n    totalPrice: 9\n}",
              "err": {},
              "uuid": "ac194033-760b-4a76-8eee-38778f1cb124",
              "parentUUID": "183de621-7a89-4409-96f1-9741fe3fb47e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "meg kell növelnie egyel a konkrét termék mennyiségét - add()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése meg kell növelnie egyel a konkrét termék mennyiségét - add()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cartAction.add(cart, itemId)\nexpect(cart.items[itemId].quantity).to.be.equal(2)\nexpect(cart.totalQuantity).to.be.equal(3)\nexpect(cart.totalPrice).to.be.equal(14)",
              "err": {},
              "uuid": "76ec64d9-f7b4-4fc4-89b7-304c64cfa68a",
              "parentUUID": "183de621-7a89-4409-96f1-9741fe3fb47e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "termék mennyiség csökkentése több, mint 1 mennyiség esetén - remove()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése termék mennyiség csökkentése több, mint 1 mennyiség esetén - remove()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cart.items[itemId].quantity = 2\ncartAction.remove(cart, itemId)\nexpect(cart.items[itemId].quantity).to.be.equal(1)\nexpect(cart.totalQuantity).to.be.equal(1)\nexpect(cart.totalPrice).to.be.equal(4)",
              "err": {},
              "uuid": "2cb19d25-67af-41c9-92e0-0c7ef500c4dc",
              "parentUUID": "183de621-7a89-4409-96f1-9741fe3fb47e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "termék mennyiség csökkentése több, pontosan 1 mennyiség esetén - remove()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése termék mennyiség csökkentése több, pontosan 1 mennyiség esetén - remove()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cartAction.remove(cart, itemId)\nexpect(cart.items[itemId]).to.be.undefined",
              "err": {},
              "uuid": "02c8f7bd-593d-4341-b020-6d6ce2223ad1",
              "parentUUID": "183de621-7a89-4409-96f1-9741fe3fb47e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "termék törlése a kosárból - clear()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése termék törlése a kosárból - clear()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cartAction.clear(cart, itemId)\nexpect(cart.items[itemId]).to.be.undefined",
              "err": {},
              "uuid": "da1e081b-083a-4f36-ae68-312ead001bec",
              "parentUUID": "183de621-7a89-4409-96f1-9741fe3fb47e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76ec64d9-f7b4-4fc4-89b7-304c64cfa68a",
            "2cb19d25-67af-41c9-92e0-0c7ef500c4dc",
            "02c8f7bd-593d-4341-b020-6d6ce2223ad1",
            "da1e081b-083a-4f36-ae68-312ead001bec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a735b29f-0987-4cb7-8e73-79218a885ee8",
          "title": "dátum manipuláció string formájában",
          "fullFile": "D:\\programkódok\\Fast food\\test\\date.js",
          "file": "\\test\\date.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c6a2064d-825c-4e8a-aec8-6f86f833c941",
              "title": "Mai dátum formázása",
              "fullFile": "D:\\programkódok\\Fast food\\test\\date.js",
              "file": "\\test\\date.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "megfelelő alakban kellene visszaadnia a megadott dátumot - formatDate()",
                  "fullTitle": "dátum manipuláció string formájában Mai dátum formázása megfelelő alakban kellene visszaadnia a megadott dátumot - formatDate()",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let today = new Date(\"Fri Feb 25 2022 13:37:34\")\n    \nlet todayString = dateFormat.formatDate(today)\n    \nexpect(todayString).to.eql(\"2022/02/25\")",
                  "err": {},
                  "uuid": "6674abff-4ca2-4d70-a32b-485c632361bb",
                  "parentUUID": "c6a2064d-825c-4e8a-aec8-6f86f833c941",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6674abff-4ca2-4d70-a32b-485c632361bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf3f16df-36c0-47ed-805c-12059ea7b1a4",
          "title": "Futár útvonalak",
          "fullFile": "D:\\programkódok\\Fast food\\test\\deliveryman.js",
          "file": "\\test\\deliveryman.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET futar",
              "fullTitle": "Futár útvonalak GET futar",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.get(\"/futar\")\n.end((err, res) => {\n    expect(res).to.have.status(200);\n}) \ndone()",
              "err": {},
              "uuid": "92dc73c3-ff8f-4298-9e76-44dbdd1d7640",
              "parentUUID": "bf3f16df-36c0-47ed-805c-12059ea7b1a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /futar/map",
              "fullTitle": "Futár útvonalak GET /futar/map",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.get(\"/futar/map\")\n.end((err, res) => {\n    expect(res).to.have.status(200);\n}) \ndone()",
              "err": {},
              "uuid": "2434ac8e-c69a-42e2-98ae-0e55c4693215",
              "parentUUID": "bf3f16df-36c0-47ed-805c-12059ea7b1a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92dc73c3-ff8f-4298-9e76-44dbdd1d7640",
            "2434ac8e-c69a-42e2-98ae-0e55c4693215"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f3d5784-a882-466c-89f9-3e5bf277af7d",
          "title": "termék útvonalak",
          "fullFile": "D:\\programkódok\\Fast food\\test\\get.js",
          "file": "\\test\\get.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "index",
              "fullTitle": "termék útvonalak index",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \n    done()",
              "err": {},
              "uuid": "6a47a925-7848-4fcd-b583-6e4fda70a093",
              "parentUUID": "3f3d5784-a882-466c-89f9-3e5bf277af7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /pizza",
              "fullTitle": "termék útvonalak GET /pizza",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/pizza\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \ndone()",
              "err": {},
              "uuid": "91ed211a-1913-4865-9d7b-49fa34428aa6",
              "parentUUID": "3f3d5784-a882-466c-89f9-3e5bf277af7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /hamburger",
              "fullTitle": "termék útvonalak GET /hamburger",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/hamburger\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \ndone()",
              "err": {},
              "uuid": "54cd5533-7fa9-45f3-b7e1-38f3c285b4a4",
              "parentUUID": "3f3d5784-a882-466c-89f9-3e5bf277af7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /palacsinta",
              "fullTitle": "termék útvonalak GET /palacsinta",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/palacsinta\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \ndone()",
              "err": {},
              "uuid": "23b02fa0-3434-47d2-be74-575575347433",
              "parentUUID": "3f3d5784-a882-466c-89f9-3e5bf277af7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /udito",
              "fullTitle": "termék útvonalak GET /udito",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/udito\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n    }) \ndone()",
              "err": {},
              "uuid": "160ff541-fc91-481d-81eb-7a6bc13f8787",
              "parentUUID": "3f3d5784-a882-466c-89f9-3e5bf277af7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a47a925-7848-4fcd-b583-6e4fda70a093",
            "91ed211a-1913-4865-9d7b-49fa34428aa6",
            "54cd5533-7fa9-45f3-b7e1-38f3c285b4a4",
            "23b02fa0-3434-47d2-be74-575575347433",
            "160ff541-fc91-481d-81eb-7a6bc13f8787"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2383a7bc-600a-4c51-8e99-62deca89af0d",
          "title": "Rendelés útnovalak és függvények",
          "fullFile": "D:\\programkódok\\Fast food\\test\\order.js",
          "file": "\\test\\order.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Rendelés útnovalak és függvények\"",
              "fullTitle": "Rendelés útnovalak és függvények \"before all\" hook in \"Rendelés útnovalak és függvények\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Adatok\ntelefonszám = \"091234568\"\ncím = \"dummy address\"\nkoordináta = [\"0.54\", \"0.44\"] \nreq = { user: { _id: \"61d84fdb9ebc9c0016365d71\" }, \n        session: { cart: { items: { ár: 5, név: \"dummy\"}}}\n      }\n\n//Mock mongodb      \nconst Mockgoose = require(\"mockgoose\").Mockgoose\nconst mockgoose = new Mockgoose(mongoose)    \nmockgoose.prepareStorage()\n    .then(() => {\n        mongoose.connect('mongodb://localhost/test',\n            { useNewUrlParser: true, useCreateIndex: true })\n            .then((res, err) => {\n            if (err) return reject(err);\n            resolve();\n            })\n        })",
              "err": {},
              "uuid": "dcfa4623-f7e0-463b-b3de-11b6256820d6",
              "parentUUID": "2383a7bc-600a-4c51-8e99-62deca89af0d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET /vasarlo/rendelesek",
              "fullTitle": "Rendelés útnovalak és függvények GET /vasarlo/rendelesek",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.get(\"/vasarlo/rendelesek\")\n.end((err, res) => {\n    expect(res).to.have.status(200);\n}) \ndone()",
              "err": {},
              "uuid": "8b998633-24df-4b75-be28-bbf49a53b27a",
              "parentUUID": "2383a7bc-600a-4c51-8e99-62deca89af0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /vasarlo/rendelesek/:id",
              "fullTitle": "Rendelés útnovalak és függvények GET /vasarlo/rendelesek/:id",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.get(\"/vasarlo/rendelesek/1\")\n.end((err, res) => {\n    expect(res).to.have.status(200);\n}) \ndone()",
              "err": {},
              "uuid": "3b0076bb-3c92-4f41-93e4-6444b49b4482",
              "parentUUID": "2383a7bc-600a-4c51-8e99-62deca89af0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "vissza kell adnia az elmentet dokumentumot - saveRendelés()",
              "fullTitle": "Rendelés útnovalak és függvények vissza kell adnia az elmentet dokumentumot - saveRendelés()",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "orderController.saveRendelés(req, telefonszám, cím, koordináta)\n    .then(result => {\n        expect(result).to.be.a(\"object\")\n    })\n    done()",
              "err": {},
              "uuid": "170f3300-56bd-40a7-a4e5-e7b78cf9259b",
              "parentUUID": "2383a7bc-600a-4c51-8e99-62deca89af0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "fd4271aa-ad5a-4a47-b682-30cc4d1d1dae",
              "title": "kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key() ",
              "fullFile": "D:\\programkódok\\Fast food\\test\\order.js",
              "file": "\\test\\order.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key() \"",
                  "fullTitle": "Rendelés útnovalak és függvények kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key()  \"before all\" hook in \"kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key() \"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rendelés = { termékek: { 1: { item: { ár: 2 }, quantity: 1 }, \n                             2: { item: { ár: 1 }, quantity: 2 }\n                       }\n           }\nnRendelés = { termékek: {}}",
                  "err": {},
                  "uuid": "fccbf13c-1d9a-4b1a-81fb-65bcda6c907b",
                  "parentUUID": "fd4271aa-ad5a-4a47-b682-30cc4d1d1dae",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key() \"",
                  "fullTitle": "Rendelés útnovalak és függvények kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key()  \"after all\" hook in \"kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key() \"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "mongoose.disconnect()",
                  "err": {},
                  "uuid": "1966cc67-e017-4440-9b21-c31e6642b1de",
                  "parentUUID": "fd4271aa-ad5a-4a47-b682-30cc4d1d1dae",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "termékek esetén összegnek nem 0 kell lennie és kulcsokat kell visszaadnia ",
                  "fullTitle": "Rendelés útnovalak és függvények kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key()  termékek esetén összegnek nem 0 kell lennie és kulcsokat kell visszaadnia ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = orderController.key(rendelés)\nexpect(results.keys).to.be.a(\"array\")\nexpect(results.keys).to.have.members([\"1\", \"2\"])\nexpect(results.összeg).to.be.equal(4)",
                  "err": {},
                  "uuid": "532e4805-5bdf-4bfb-816c-1cd81da37a3d",
                  "parentUUID": "fd4271aa-ad5a-4a47-b682-30cc4d1d1dae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "ha nincs termék összeg 0-nak kell lennie és nincs kulcs",
                  "fullTitle": "Rendelés útnovalak és függvények kulcsokat és összes áru ár*mennyiség összeget kell visszaadnia - key()  ha nincs termék összeg 0-nak kell lennie és nincs kulcs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = orderController.key(nRendelés)\nexpect(results.összeg).to.be.equal(0)\nexpect(results.keys).to.be.empty",
                  "err": {},
                  "uuid": "b3e9f821-7ae7-41b0-b9fc-b6661c83e987",
                  "parentUUID": "fd4271aa-ad5a-4a47-b682-30cc4d1d1dae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "532e4805-5bdf-4bfb-816c-1cd81da37a3d",
                "b3e9f821-7ae7-41b0-b9fc-b6661c83e987"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "8b998633-24df-4b75-be28-bbf49a53b27a",
            "3b0076bb-3c92-4f41-93e4-6444b49b4482",
            "170f3300-56bd-40a7-a4e5-e7b78cf9259b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.0"
    },
    "marge": {
      "options": null,
      "version": "6.1.0"
    }
  }
}