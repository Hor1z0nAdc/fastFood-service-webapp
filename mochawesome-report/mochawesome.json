{
  "stats": {
    "suites": 9,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-25T15:54:29.657Z",
    "end": "2022-02-25T15:54:30.589Z",
    "duration": 932,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fffc4193-f37f-4d55-ac9c-0ca55609fa8e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c879c339-a31b-4bb1-87e5-c2f903a69f0f",
          "title": "Kosár létrehozása - createCart() függvény tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\cart.js",
          "file": "\\test\\api\\items\\cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "vissza kellene adnia egy üres kosarat a megfelelő kulcsokkal",
              "fullTitle": "Kosár létrehozása - createCart() függvény tesztelése vissza kellene adnia egy üres kosarat a megfelelő kulcsokkal",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let cart = cartAction.createCart()\nexpect(cart).to.be.a(\"object\")\nexpect(cart).to.have.keys([\"items\", \"totalPrice\", \"totalQuantity\"])",
              "err": {},
              "uuid": "9db8b570-cdbb-4ab6-bb01-50c5610b8334",
              "parentUUID": "c879c339-a31b-4bb1-87e5-c2f903a69f0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9db8b570-cdbb-4ab6-bb01-50c5610b8334"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3300c740-4ce1-4fde-94ad-47377af68b89",
          "title": "hozzáadás a kosárhoz - addToCart() függvény tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\cart.js",
          "file": "\\test\\api\\items\\cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "33b871a5-ddbc-4143-a096-caf309542aba",
              "title": "kosárban nem jelen lévő termék hozzáadása",
              "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\cart.js",
              "file": "\\test\\api\\items\\cart.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "hozzá kell adni a kosárhoz a termék id-ját ",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése kosárban nem jelen lévő termék hozzáadása hozzá kell adni a kosárhoz a termék id-ját ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(cart.items).to.have.key(2)",
                  "err": {},
                  "uuid": "5a179b80-762d-4dfc-9de8-49442fb6819c",
                  "parentUUID": "33b871a5-ddbc-4143-a096-caf309542aba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "kosárban lévő temékhez hozzá kell adnia a mennyiséget és tulajdonságokat",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése kosárban nem jelen lévő termék hozzáadása kosárban lévő temékhez hozzá kell adnia a mennyiséget és tulajdonságokat",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(cart.items[2].quantity).to.equal(1)\nexpect(cart.items[2].item).to.eql({_id: 2, ár: 5})",
                  "err": {},
                  "uuid": "c392d803-7ba0-4827-a9f5-dee06311dd88",
                  "parentUUID": "33b871a5-ddbc-4143-a096-caf309542aba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "meg kell növelnie a kosárban lévő termék mennyiséget és az árat",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése kosárban nem jelen lévő termék hozzáadása meg kell növelnie a kosárban lévő termék mennyiséget és az árat",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(cart.totalQuantity).to.be.equal(3)\nexpect(cart.totalPrice).to.be.equal(14)",
                  "err": {},
                  "uuid": "a33b571e-c126-4255-9536-53a780487021",
                  "parentUUID": "33b871a5-ddbc-4143-a096-caf309542aba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a179b80-762d-4dfc-9de8-49442fb6819c",
                "c392d803-7ba0-4827-a9f5-dee06311dd88",
                "a33b571e-c126-4255-9536-53a780487021"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c901092b-50eb-46ac-8bd2-f60b8d04e015",
              "title": "már jelen lévő termék hozzáadása",
              "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\cart.js",
              "file": "\\test\\api\\items\\cart.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "növelnie kell a teljes mennyiséget, mennyiséget és az árat",
                  "fullTitle": "hozzáadás a kosárhoz - addToCart() függvény tesztelése már jelen lévő termék hozzáadása növelnie kell a teljes mennyiséget, mennyiséget és az árat",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let  cart = {\n    items: { 2: { _id: 2, ár: 5, quantity: 1}},\n    totalQuantity: 2,\n    totalPrice: 9\n}\nlet req = { body: { _id: 2, ár: 5}}\ncartAction.addToCart(cart, req)\nexpect(cart.totalQuantity).to.be.equal(3)\nexpect(cart.items[req.body._id].quantity).to.be.equal(2)\nexpect(cart.totalPrice).to.be.equal(14)",
                  "err": {},
                  "uuid": "18dfcf92-d3c8-4352-a400-cdcd5ecc0d6a",
                  "parentUUID": "c901092b-50eb-46ac-8bd2-f60b8d04e015",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18dfcf92-d3c8-4352-a400-cdcd5ecc0d6a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "198bcb2e-1da0-4008-a418-7a360ac272bf",
          "title": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése",
          "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\cart.js",
          "file": "\\test\\api\\items\\cart.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"kosár frissítése - updateCart()-ot megvalósító függvények tesztelése\"",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése \"before each\" hook in \"kosár frissítése - updateCart()-ot megvalósító függvények tesztelése\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cart = {\n    items: { 2: { item: { _id: 2, ár: 5 }, quantity: 1},\n             3: { item: { _id: 3, ár: 4 }, quantity: 1}},\n    totalQuantity: 2,\n    totalPrice: 9\n}",
              "err": {},
              "uuid": "b262bc20-530f-4270-b22f-6b35ba6405f5",
              "parentUUID": "198bcb2e-1da0-4008-a418-7a360ac272bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "meg kell növelnie egyel a konkrét termék mennyiségét - add()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése meg kell növelnie egyel a konkrét termék mennyiségét - add()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cartAction.add(cart, itemId)\nexpect(cart.items[itemId].quantity).to.be.equal(2)\nexpect(cart.totalQuantity).to.be.equal(3)\nexpect(cart.totalPrice).to.be.equal(14)",
              "err": {},
              "uuid": "1fb3c3a4-e1ff-47de-9c64-bcd901d27b11",
              "parentUUID": "198bcb2e-1da0-4008-a418-7a360ac272bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "termék mennyiség csökkentése több, mint 1 mennyiség esetén - remove()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése termék mennyiség csökkentése több, mint 1 mennyiség esetén - remove()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cart.items[itemId].quantity = 2\ncartAction.remove(cart, itemId)\nexpect(cart.items[itemId].quantity).to.be.equal(1)\nexpect(cart.totalQuantity).to.be.equal(1)\nexpect(cart.totalPrice).to.be.equal(4)",
              "err": {},
              "uuid": "413521f2-8723-4290-9a3e-d758a4ef1f10",
              "parentUUID": "198bcb2e-1da0-4008-a418-7a360ac272bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "termék mennyiség csökkentése több, pontosan 1 mennyiség esetén - remove()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése termék mennyiség csökkentése több, pontosan 1 mennyiség esetén - remove()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cartAction.remove(cart, itemId)\nexpect(cart.items[itemId]).to.be.undefined",
              "err": {},
              "uuid": "a17698b5-7c3d-4836-99de-98cb935f3c59",
              "parentUUID": "198bcb2e-1da0-4008-a418-7a360ac272bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "termék törlése a kosárból - clear()",
              "fullTitle": "kosár frissítése - updateCart()-ot megvalósító függvények tesztelése termék törlése a kosárból - clear()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cartAction.clear(cart, itemId)\nexpect(cart.items[itemId]).to.be.undefined",
              "err": {},
              "uuid": "deba1e1d-b9f1-4c83-9252-29fd653c21af",
              "parentUUID": "198bcb2e-1da0-4008-a418-7a360ac272bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fb3c3a4-e1ff-47de-9c64-bcd901d27b11",
            "413521f2-8723-4290-9a3e-d758a4ef1f10",
            "a17698b5-7c3d-4836-99de-98cb935f3c59",
            "deba1e1d-b9f1-4c83-9252-29fd653c21af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3cd72d32-6e04-4f1a-8928-d5c7ad3bc39b",
          "title": "dátum manipuláció string formájában",
          "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\date.js",
          "file": "\\test\\api\\items\\date.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "321030b6-37e0-49ca-92a7-d8b4b2a38af2",
              "title": "Mai dátum formázása",
              "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\date.js",
              "file": "\\test\\api\\items\\date.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "megfelelő alakban kellene visszaadnia a megadott dátumot - formatDate()",
                  "fullTitle": "dátum manipuláció string formájában Mai dátum formázása megfelelő alakban kellene visszaadnia a megadott dátumot - formatDate()",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let today = new Date(\"Fri Feb 25 2022 13:37:34\")\n    \nlet todayString = dateFormat.formatDate(today)\n    \nexpect(todayString).to.eql(\"2022/02/25\")",
                  "err": {},
                  "uuid": "94237dfe-c482-468c-b653-1deee4be2df3",
                  "parentUUID": "321030b6-37e0-49ca-92a7-d8b4b2a38af2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94237dfe-c482-468c-b653-1deee4be2df3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4bcbf22c-cf9c-4661-9f7e-87661212aa30",
              "title": "currentDate()",
              "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\date.js",
              "file": "\\test\\api\\items\\date.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"currentDate()\"",
                  "fullTitle": "dátum manipuláció string formájában currentDate() \"before all\" hook in \"currentDate()\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sinon.stub(dateFormat, \"formatDate\").returns(\"2022/0002/25\")",
                  "err": {},
                  "uuid": "034a6dd9-37c4-4755-b6ad-441783ed8746",
                  "parentUUID": "4bcbf22c-cf9c-4661-9f7e-87661212aa30",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"currentDate()\"",
                  "fullTitle": "dátum manipuláció string formájában currentDate() \"after all\" hook in \"currentDate()\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dateFormat.formatDate.restore()",
                  "err": {},
                  "uuid": "92dac6f2-a3b1-4ccd-9c42-93b4a7c2af4e",
                  "parentUUID": "4bcbf22c-cf9c-4661-9f7e-87661212aa30",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "megfelelő alakban kell visszaadnia a mai dátumot",
                  "fullTitle": "dátum manipuláció string formájában currentDate() megfelelő alakban kell visszaadnia a mai dátumot",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let dateString = currentDate()\nexpect(dateString).to.be.eql(\"2022/02/25\")",
                  "err": {},
                  "uuid": "1762db35-700d-4d8a-8a17-47cb43f5bd30",
                  "parentUUID": "4bcbf22c-cf9c-4661-9f7e-87661212aa30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1762db35-700d-4d8a-8a17-47cb43f5bd30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "914512ea-49b9-460c-a0a2-5bf3bdd6eba4",
          "title": "termék útvonalak",
          "fullFile": "D:\\programkódok\\Fast food\\test\\api\\items\\get.js",
          "file": "\\test\\api\\items\\get.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "index",
              "fullTitle": "termék útvonalak index",
              "timedOut": false,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.get(\"/\")\n.end((err, res) => {\n    expect(res).to.have.status(200);\n    done()\n})",
              "err": {},
              "uuid": "944be0ef-f224-4745-b8a3-f348ca1ecf8b",
              "parentUUID": "914512ea-49b9-460c-a0a2-5bf3bdd6eba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /pizza",
              "fullTitle": "termék útvonalak GET /pizza",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/pizza\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        done()\n    })",
              "err": {},
              "uuid": "a42216f6-c0ac-4994-9432-e7d644c11bee",
              "parentUUID": "914512ea-49b9-460c-a0a2-5bf3bdd6eba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /hamburger",
              "fullTitle": "termék útvonalak GET /hamburger",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/hamburger\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        done()\n    })",
              "err": {},
              "uuid": "8c899974-eaa2-4350-a388-a4c8f6c4a161",
              "parentUUID": "914512ea-49b9-460c-a0a2-5bf3bdd6eba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /palacsinta",
              "fullTitle": "termék útvonalak GET /palacsinta",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/palacsinta\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        done()\n    })",
              "err": {},
              "uuid": "81bef12b-23c6-4e6a-8406-1ac71a7a5d66",
              "parentUUID": "914512ea-49b9-460c-a0a2-5bf3bdd6eba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /udito",
              "fullTitle": "termék útvonalak GET /udito",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/udito\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        done()\n    })",
              "err": {},
              "uuid": "7d37d9e4-6620-4157-8d51-d9e5db4da2cc",
              "parentUUID": "914512ea-49b9-460c-a0a2-5bf3bdd6eba4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "944be0ef-f224-4745-b8a3-f348ca1ecf8b",
            "a42216f6-c0ac-4994-9432-e7d644c11bee",
            "8c899974-eaa2-4350-a388-a4c8f6c4a161",
            "81bef12b-23c6-4e6a-8406-1ac71a7a5d66",
            "7d37d9e4-6620-4157-8d51-d9e5db4da2cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 837,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.0"
    },
    "marge": {
      "options": null,
      "version": "6.1.0"
    }
  }
}